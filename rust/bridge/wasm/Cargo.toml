#
# Copyright (C) 2020-2021 Signal Messenger, LLC.
# SPDX-License-Identifier: AGPL-3.0-only
#

[package]
name = "libsignal-wasm-bridge"
version = "0.8.4"
authors = ["Emelia Smith <emelia@unobvious.technology>", "Jordan Rose <jrose@signal.org>", "Jack Lloyd <jack@signal.org>"]
license = "AGPL-3.0-only"
edition = "2018"

[lib]
name = "libsignal_wasm"
crate-type = ["cdylib", "rlib"]

# [features]
# default = ["armv8"]
# armv8 = ["libsignal-protocol/armv8", "libsignal-bridge/armv8"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
libsignal-protocol = { path = "../../protocol" }
libsignal-bridge = { path = "../shared", features = ["wasm"] }
wasm-bindgen = "0.2.74"
# signal-neon-futures = { path = "futures" }
# neon = { version = "0.9", default-features = false, features = ["napi-6", "channel-api"] }
rand = "0.7.3"
log = "0.4"
log-panics = { version = "2.0.0", features = ["with-backtrace"] }
async-trait = "0.1.41"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"
